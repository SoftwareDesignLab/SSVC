- name: Play to create a clone of a vm for use with CAPEv2
  hosts: local

  tasks:
    - name: Revert the VM to its base config
      ansible.builtin.shell: virsh snapshot-revert win10-1 base
      # install software here
    - name: Wait for CAPEv2 agent to be active
      ansible.builtin.wait_for:
        port: 8000
        host: 192.168.55.173
        delay: 20
    - name: Sleep for 1 minute
      ansible.builtin.pause:
        minutes: 1
    - name: Run the environment setup python file
      ansible.builtin.shell: python3 env_setup.py >> env_setup_logs.txt
      #debugger: always
    - name: Shutdown the VM 
      ansible.builtin.shell: virsh shutdown win10-1
    - name: Wait for the VM to finish shutting down 
      shell: virsh list --all | grep "win10-1  "| awk '{ print $3 $4}' #need to wait for this to equal 'shutoff'
      register: result
      until: result.stdout == 'shutoff'
      delay: 10
      retries: 5
    - name: Remove the network adapter
      ansible.builtin.shell: virt-xml --remove-device win10-1 --network source=default
    - name: Startup the VM
      ansible.builtin.shell: virsh start win10-1
    - name: Wait for CAPEv2 agent to be active
      ansible.builtin.wait_for:
        port: 8000
        host: 192.168.55.173
        delay: 10
    - name: Delete old snapshot
      ansible.builtin.shell: virsh snapshot-delete win10-1 env
    - name: Take a snapshot
      ansible.builtin.shell: virsh snapshot-create-as win10-1 env
    - name: Shutdown the VM 
      ansible.builtin.shell: virsh shutdown win10-1
    - name: Wait for the VM to finish shutting down 
      shell: virsh list --all | grep "win10-1  "| awk '{ print $3 $4}' #need to wait for this to equal 'shutoff'
      register: result
      until: result.stdout == 'shutoff'
      delay: 10
      retries: 5
    # do capev2 stuff here
    #- name: Run the Caldera/CAPEv2 setup
    #  shell: python3 caldera-cape.py
    - name: Run CAPEv2 with the sample to analyze
      shell: python3 cape-analyze.py