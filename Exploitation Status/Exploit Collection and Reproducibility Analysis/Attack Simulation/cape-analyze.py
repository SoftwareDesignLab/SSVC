import requests, time, json

#get config
with open('cape-analyze-config.json') as config:
  config_info = json.load(config)

url = 'http://' + config_info.get('cape_ip') + ':8000/apiv2/tasks/create/file/'
cape_headers = {'Authorization': 'Token '+ config_info.get('cape_token')}
file = {
    'file': open('splunkd.exe', 'rb'),
}
data = {
    'machine' : 'win10-1',
    'timeout' : '200',
    'custom' : config_info.get('name') #adversary name
}


task_ids = []

for i in range(config_info.get('times_to_submit')): #submit the caldera agent to capev2
    file = {
        'file': open(config_info.get('file_to_submit'), 'rb'),
    }
    r = requests.post(url, headers=cape_headers, files=file, data=data)
    if(r.json().get('error') == False):
      task_ids.append(r.json().get('data').get('task_ids')[0])
    else:
        print(r.json().get('error'))
    

print(task_ids)
print('tasks created in CAPEv2')

#check if cape is done
url = 'http://' + config_info.get('cape_ip') + ':8000/apiv2/tasks/status/'
done_tasks = 0
print(task_ids)
while(done_tasks < config_info.get('times_to_submit')):
  done_tasks = 0 #reset counter
  for id in task_ids:
      id_url = url+str(id)
      r = requests.get(id_url, headers=cape_headers)
      r = r.json()
      print(r)
      if(r.get('data')=='reported'):
        done_tasks += 1
  #print(done_tasks)
  time.sleep(15) #poll every 15 seconds

url = 'http://' + config_info.get('cape_ip') + ':8000/apiv2/tasks/get/report/'
for id in task_ids:
  id_url = url+str(id)
  r = requests.get(id_url, headers = cape_headers)
  file_name = str(id) + '_' + config_info.get('name') + '.json'
  file = open(file_name, 'w')
  json.dump(r.json(), file)
  file.close()
  string_to_print = 'completed ' + config_info.get('name') + ' and cape id: ' + str(id)
  print(string_to_print)
  print('waiting 30s for everything to reset...')
  time.sleep(30)